-
    hosts: localhost
    vars_files:
        - external_vars.yaml
    tags: create
    tasks:
        -
            name: Retrieve facts about the instance template
            tags: test
            gcp_compute_instance_template_facts:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                filters:
                    - name = "{{ webserver_instance_template }}"
            register: instance_templates
        -
            name: Create the webserver instance group manager
            tags: test
            gcp_compute_instance_group_manager:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                name: "{{ webserver_group_name }}"
                zone: "{{ gcp_zone }}"
                named_ports:
                    -
                        name: "http"
                        port: 80
                    -
                        name: "http-alt"
                        port: 8080
                    -
                        name: "https"
                        port: 443
                base_instance_name: "{{ webserver_instance_base_name }}"
                instance_template: "{{ instance_templates['items'][0] }}"
                target_size: "{{ webserver_instances_num }}"
            register: instance_group_manager
        -
            name: This is the group manager
            tags: test
            debug:
                var: instance_group_manager
        -
            name: Create a http health check
            gcp_compute_http_health_check:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                name: "{{ webserver_health_check_name }}"
                port: 8080
                request_path: '/'
                check_interval_sec: 5
                timeout_sec: 4
                healthy_threshold: 3
                unhealthy_threshold: 3
            register: health_check
        -
            name: Create the backend service for the webservers
            # NOTE: This will be a *global* backend service anyway
            # https://github.com/ansible/ansible/issues/52319
            gcp_compute_backend_service:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                name: "{{ webserver_service_name }}"
                load_balancing_scheme: EXTERNAL
                protocol: HTTP
                port_name: "http-alt"
                timeout_sec: 30
                connection_draining:
                    draining_timeout_sec: 300
                session_affinity: GENERATED_COOKIE
                backends:
                    -
                        balancing_mode: UTILIZATION
                        max_utilization: "0.8"
                        capacity_scaler: "1.0"
                        group:
                            selfLink: "{{ instance_group_manager.instanceGroup }}"
                health_checks:
                    - "{{ health_check.selfLink }}"
            register: backend_service
        -
            name: Create a URL map
            gcp_compute_url_map:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                name: "{{ gcp_project }}-url-map"
                default_service: "{{ backend_service }}"
            register: url_map
        -
            name: Create a target proxy
            gcp_compute_target_http_proxy:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                name: "{{ gcp_project }}-tgt-proxy"
                url_map: "{{ url_map }}"
            register: target_proxy
        -
            name: Create a forwarding rule
            gcp_compute_global_forwarding_rule:
                project: "{{ gcp_project_id }}"
                auth_kind: serviceaccount
                service_account_file: "{{ gcp_cred_file }}"
                name: "{{ gcp_project }}-fwd-rule"
                load_balancing_scheme: EXTERNAL
                ip_protocol: TCP
                ip_version: IPV4
                port_range: "8080-8080"
                target: "{{ target_proxy.selfLink }}"
            register: fwd_rule
        -
            name: This is the forwarding rule
            debug:
                var: fwd_rule

# vim: set sw=4 ts=4 et indk= :
